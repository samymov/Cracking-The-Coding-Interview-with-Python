class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    def__init__(self):
        self.head = None
        
** Insertion: At the Front, At the end, After a Certain Node
** Deletion:

# insert at the front

    def push(self,new_data):
       new_node=Node(new_data)
       new_node.next=self.head
       self.head=new_node

#insert after a certain node
    def insert_after(self,prev_node,new_data):
       new_node=Node(new_data)
       prev_node.next=new_node
       new_node.next=prev_node.next
       

# insert at the end
   def append(self,new_data):
      new_node=Node(new_data)
      if self.head is None:
          self.head= new_node
          return
      last=self.head
      while(last.next):
          last=last.next
      last.next=new_node
      
      
# deleting a node
   def delete(self,key):
      tmp = self.head
      if tmp is not None:
          if (tmp.data == key):
              self.head=tmp.next
              tmp=None
              return
      while tmp is not None:
         if (tmp.data == key):
            break
         prev=tmp
         tmp=tmp.next
      if tmp == None:
        break
        
      prev.next = tmp.next
      tmp = None
